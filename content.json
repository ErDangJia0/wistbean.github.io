[{"title":"从0到1打造一个属于自己的个人网站","date":"2018-08-30T11:38:13.000Z","path":"2018/08/30/build-personal-website/","text":"为什么要有自己的个人网站呢？我觉得现在身处于互联网时代，有自己的个人网站其实就和名片差不多了，在这里可以不断的记录自己的生活，总结自己的知识，人生思考什么的，以后介绍自己直接把网站扔给对方。一来是可以装下逼，二来是可以让对方更好的了解自己。 再者就是相对的自由了，现在市面上有很多 Blog 系统，你只要注册一下，就可以直接在他们的平台生成一个你自己的blog，虽然很方便，但是你要付出的代价就是：忍受他们平台在你的blog嵌入一堆广告。受他们的限制与监管，人家不爽就随随便便删了你的文章，没商量。 比如这样： 知乎 简书 微信 爽吗？反正我是不爽。 所以自己搞一个完全属于自己的网站，相对来说，没那么苦逼。为什么说相对？ 因为我们也要看大佬的眼色啊。 但是总比被各种平台恶心好吧。也别幻想什么区块链博客系统，对于目前来说，不现实。 使用 Hexo 框架来搭建个人网站这两天我重新整理了一下自己的 Blog ，因为我之前用的是 Octopress 框架，有些年头了，一些主题和插件并不是很多。 后来对比了几个框架，发现 Hexo 不错，和 Octopress 差不多，也是可以用 Markdown 写文章，然后生成静态网站，不过主题丰富一些。 Hexo 是基于 nodejs 的,搭建起来很简单。那么接下来就说说如何从0开始搭建吧。 开始搭建 因为 hexo 是基于 node 框架的，所以呢，我们首先需要下载安装node，下载地址：nodejs 安装完之后，我们打开命令窗口，输入 node -v ，如果返回下图所示，那么就说明你安装node成功了。 node 版本 安装成功后，我们在命令行窗口运行如下命令来安装hexo： npm install hexo-cli -g 初始化博客目录： hexo init wistbean.github.io (这里的wistbean换成你自己的英文名) 初始化完成后，我们就进入我们的目录： cd wistbean.github.io 安装 npm install clean一下，然后生成静态页面 hexo clean hexo g g 就是generate ,生成的意思 把你的网站运行起来 hexo s s 就是server ,在服务器运行的意思 打开你的浏览器，输入 localhost:4000 。 自此，你的个人网站就这么速度的搭建起来了！ hexo 让你的个人网站漂亮的 blingbling 的修改你的网站中的个人信息进入你的网站目录，打开 _config 文件，这个文件是用来配置你的网站信息的。 这里列出我的简单配置，具体可以看这个文档 title: wistbean subtitle: 肯定会 description: wistbean的个人博客，主要涉及到编程（Java，Python，Linux等），个人提升学习，视频教程，《肯定会软件技术》电台节目 keywords: wistbean，肯定会，java，python，电台，教程 author: wistbean language: zh 选一个主题刚搭建完的网站，是不是觉得有点丑，不符合你的漂亮的脸庞？ 反正我是这么觉得的，那么就选一个主题来装饰一下吧，在这里可以选择你要的主题：hexo主题 下载主题选择好了你的主题之后，就可以下载主题资源了，比如我这里选择一个 NEXT 主题来演示一下： git clone https://github.com/iissnan/hexo-theme-next 这里主要就是将主题下载到我们的themes目录下。 如果你还不熟悉 Git 的使用的话，可以看看我之前的 Git 视频教程：代码托管Git的使用 配置主题主题下载完之后，在你根目录下的 _config.yml 文件中，修改 theme 为你的主题名字： theme: next 重新生成和运行hexo g hexo s 访问一下看看，是不是比之前好看多了？ hexo next主题 写上你的第一篇博客文章，打上标签和分类你已经把你的网站打扮的漂亮大方简洁惹人爱了，那么接下来就要好好去写内容了，内容才是重要的。 两种方式来新建你的博文命令形式 在你的blog目录下使用如下命令： hexo new article （这里的article写上你的文章的名称） 输入这样的命令之后你的source/_posts下就会生成一个 article.md 文件，在这个文件下就可以写上你的博客内容了。用 Markdown 的语法去写。 直接新建方式直接点的方式就是直接在source/_posts新建一个 Markdown 文件，其实和命令形式是一个道理，只不过命令形式用了命令来创建。推荐使用命令的方式，毕竟 Geek 一点。 给你的文章打上标签打标签能让你的文章方便检索。 打开标签功能： hexo new page tags 这时候你的source/下生成 tags/index.md 文件，我们将其打开，然后把它改成： type: &quot;tags&quot; comments: false 这时候你要为你的文章打上标签就可以在文章的头部写上： tags: - Tag1 - Tag2 - Tag3 给你的文章添加分类分类，归档，是你博客的特性之一。 打开分类功能： hexo new page categories 这说你的source目录下生成 categories/index.md 文件，我们将其打开，把它改成： type: &quot;categories&quot; comments: false 这时候你就可以给你的文章归类存档了，使用方式就是在你的文章的头部加上： categories: - 分类1 - 分类2 注意：标签和分类要确定你的配置文件 _config.yml 是否有打开了 tag_dir: tags 和 category_dir: categories。另外，Markdown 的语法是写作最优雅最简洁最简单的，如果之前没用过的建议去学一下Markdown 语法说明，一般一个钟左右就能掌握。因为它和HTML那样简单。 给你的文章添加评论当别人看了你的文章，有问题想跟你探讨，没评论怎么行？评论也是你的 Blog 交互的重要方式之一。 现在很多主题都内置了第三方评论的系统。比较常用的有： 多说 ：http://duoshuo.com/ 畅言 ：https://changyan.kuaizhan.com/ Valine：https://github.com/xcss/Valine Disqus：https://disqus.com/ 友言: http://www.uyan.cc/ gitment: https://github.com/imsun/gitment 自己去看一下，喜欢哪个用哪个，自己的 Blog 就是要自由。 选好你的评论系统之后，进入平台注册后，平台会给你一个 APPID和appkey。拿到这些信息到你的主题下的配置文件下设置。 以 next 主题和畅言评论为例：进入你的themes/next,打开_config.yml，定位到 changyan ，把 enable 改为 true。 changyan: enable: true appid: 这里写上你的畅言在appid appkey: 这里写上你的畅言在appkey 设置好之后，重新clean生成一下就有评论啦： hexo clean hexo g hexo s 打开你的预览连接看看你的文章下方，已经有评论功能啦。 评论 让全世界的人都认识你已经搞定了个人blog，接下来当然是要部署到网上让人家访问了，如果不想花钱，可以使用GitHub Pages，使用它就可以部署自己的网站啦。 对于 GitHub 不知道怎么用的童鞋，可以看一下我的这个视频教程：GitHub完全使用指南 创建Github pages 仓库接着创建一个 xxx.github.io 的 public 仓库，这里的xxx写你的名字，比如我写的是 wistbean.github.io,那么到时我就可以通过 wistbean.github.io 来访问我的网站了。创建完成之后，那么你就有自己的 Git 地址了。 安装 hexo-deployer-git在你的博客目录下输入如下命令： npm install hexo-deployer-git --save 配置你的Git打开你的配置文件，然后输入你的git地址： deploy: type: git repo: https://github.com/xxx/xxxx.github.io.git 推送你的网站到Github上直接输入命令 ： hexo d d 就是 deploy ， 部署上去的意思。 访问你的网站直接在浏览器输入你的 xxx.github.io 就可以访问啦！ 要有点个性，绑上你的域名有了自己的网站，当然是要自己的网址，这样才帅嘛，当然有自己的服务器就更帅了。 购买域名关于域名的购买我比较推荐去godaddy，这是国外的域名商，使用起来不错的。 绑定域名买完你的域名之后，接下来几个步骤轻松搞定： 添加 CNAME 文件在你的博客的 sources 目录下新建一个 CNAME 文件，这个文件里面就写你的域名就可以了，比如我就写： www.wistbean.com。 接着将文件push到你的GitHub上，可以使用 hexo s 命令。 在你的域名商后台进行 DNS 解析添加两条记录：1. 主机记录： @ 记录类型：A 记录值：192.30.252.154 或者 192.30.252.153 2. 主机记录： www 记录类型： CNAME 记录值： xxx.github.io (这里就是你的github仓库名称) GitHub 设置域名在你的 GitHub 设置域名，在你的 GitHub 博客项目中点击 Settings，在 GitHub Pages 下的 Custom domain 写上你的域名，然后 save。 以上，你就可以通过你自己的域名访问到你的网站啦！ 服务器搞起，完全自主权虽然你现在已经可以使用你的域名访问你的网站，但是呢，有自己的服务器托管自己的网站还是爽一点的，GitHub屏蔽了百度的爬虫，也就是说别人通过百度搜索不到你的网站，这你能忍？ 有自己的服务器的话就可以被更多搜索引擎收录，还有呢就是有自己的服务器还可以干些其它的事情。 购买服务器这里的服务器当然推荐要买国外的，这样的话你的域名就不需要备案，而且还可以搭建 VPN ，一举三得，酸爽。 服务器购买推荐使用搬瓦工，因为这是我用过觉得性价比最好的，而且呢，还可以领取到优惠码，很多人不知道的，领取优惠码可以看这里：拿到搬瓦工优惠码 使用 Nginx买了服务器之后，那么你就可以用 Nginx 来当做你网站的 web 服务器，搭建也很简单，关于Nginx搭建和配置就不多说了，如果之前没玩过可以看这里：Nginx搭建静态网页服务器 DNS解析到你的服务器在你的域名商，使用 DNS 解析，添加一条 A 记录就可以了，记录值就是你这台服务器的 IP 地址，一般启用后 30 分钟左右就可以访问啦。 以上你就完全拥有属于自己的个人网站啦。","tags":[{"name":"教程","slug":"教程","permalink":"http://www.wistbean.com/tags/教程/"},{"name":"个人网站","slug":"个人网站","permalink":"http://www.wistbean.com/tags/个人网站/"},{"name":"hexo","slug":"hexo","permalink":"http://www.wistbean.com/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"http://www.wistbean.com/tags/blog/"}]},{"title":"「2-5」使用InteliJ IDEA 创建 Maven 聚合工程","date":"2018-08-29T09:25:26.000Z","path":"2018/08/29/java-ssm-2-5/","text":"","tags":[{"name":"Java","slug":"Java","permalink":"http://www.wistbean.com/tags/Java/"},{"name":"Java视频教程","slug":"Java视频教程","permalink":"http://www.wistbean.com/tags/Java视频教程/"},{"name":"项目实战","slug":"项目实战","permalink":"http://www.wistbean.com/tags/项目实战/"},{"name":"分布式","slug":"分布式","permalink":"http://www.wistbean.com/tags/分布式/"},{"name":"教程","slug":"教程","permalink":"http://www.wistbean.com/tags/教程/"},{"name":"SSM","slug":"SSM","permalink":"http://www.wistbean.com/tags/SSM/"},{"name":"Maven","slug":"Maven","permalink":"http://www.wistbean.com/tags/Maven/"},{"name":"InteliJ IDEA","slug":"InteliJ-IDEA","permalink":"http://www.wistbean.com/tags/InteliJ-IDEA/"}]},{"title":"「2-4」使用InteliJ IDEA 创建分布式多模块 Maven 项目","date":"2018-08-29T09:25:25.000Z","path":"2018/08/29/java-ssm-2-4/","text":"","tags":[{"name":"Java","slug":"Java","permalink":"http://www.wistbean.com/tags/Java/"},{"name":"Java视频教程","slug":"Java视频教程","permalink":"http://www.wistbean.com/tags/Java视频教程/"},{"name":"项目实战","slug":"项目实战","permalink":"http://www.wistbean.com/tags/项目实战/"},{"name":"分布式","slug":"分布式","permalink":"http://www.wistbean.com/tags/分布式/"},{"name":"教程","slug":"教程","permalink":"http://www.wistbean.com/tags/教程/"},{"name":"SSM","slug":"SSM","permalink":"http://www.wistbean.com/tags/SSM/"},{"name":"Maven","slug":"Maven","permalink":"http://www.wistbean.com/tags/Maven/"},{"name":"InteliJ IDEA","slug":"InteliJ-IDEA","permalink":"http://www.wistbean.com/tags/InteliJ-IDEA/"}]},{"title":"「2-3」使用 InteliJ IDEA 创建 Maven 项目与相关配置","date":"2018-08-29T09:25:24.000Z","path":"2018/08/29/java-ssm-2-3/","text":"","tags":[{"name":"Java","slug":"Java","permalink":"http://www.wistbean.com/tags/Java/"},{"name":"Java视频教程","slug":"Java视频教程","permalink":"http://www.wistbean.com/tags/Java视频教程/"},{"name":"项目实战","slug":"项目实战","permalink":"http://www.wistbean.com/tags/项目实战/"},{"name":"分布式","slug":"分布式","permalink":"http://www.wistbean.com/tags/分布式/"},{"name":"教程","slug":"教程","permalink":"http://www.wistbean.com/tags/教程/"},{"name":"SSM","slug":"SSM","permalink":"http://www.wistbean.com/tags/SSM/"},{"name":"Maven","slug":"Maven","permalink":"http://www.wistbean.com/tags/Maven/"},{"name":"InteliJ IDEA","slug":"InteliJ-IDEA","permalink":"http://www.wistbean.com/tags/InteliJ-IDEA/"}]},{"title":"「2-2」码农商城 SSM 系统所需的 Maven 模块简介","date":"2018-08-29T09:25:23.000Z","path":"2018/08/29/java-ssm-2-2/","text":"","tags":[{"name":"Java","slug":"Java","permalink":"http://www.wistbean.com/tags/Java/"},{"name":"Java视频教程","slug":"Java视频教程","permalink":"http://www.wistbean.com/tags/Java视频教程/"},{"name":"项目实战","slug":"项目实战","permalink":"http://www.wistbean.com/tags/项目实战/"},{"name":"分布式","slug":"分布式","permalink":"http://www.wistbean.com/tags/分布式/"},{"name":"教程","slug":"教程","permalink":"http://www.wistbean.com/tags/教程/"},{"name":"SSM","slug":"SSM","permalink":"http://www.wistbean.com/tags/SSM/"},{"name":"Maven","slug":"Maven","permalink":"http://www.wistbean.com/tags/Maven/"}]},{"title":"「2-1」什么是Maven，Maven的配置","date":"2018-08-29T09:25:22.000Z","path":"2018/08/29/java-ssm-2-1/","text":"","tags":[{"name":"Java","slug":"Java","permalink":"http://www.wistbean.com/tags/Java/"},{"name":"Java视频教程","slug":"Java视频教程","permalink":"http://www.wistbean.com/tags/Java视频教程/"},{"name":"项目实战","slug":"项目实战","permalink":"http://www.wistbean.com/tags/项目实战/"},{"name":"分布式","slug":"分布式","permalink":"http://www.wistbean.com/tags/分布式/"},{"name":"教程","slug":"教程","permalink":"http://www.wistbean.com/tags/教程/"},{"name":"SSM","slug":"SSM","permalink":"http://www.wistbean.com/tags/SSM/"},{"name":"Maven","slug":"Maven","permalink":"http://www.wistbean.com/tags/Maven/"}]},{"title":"「1-4」GitHub完全使用指南","date":"2018-08-29T09:25:21.000Z","path":"2018/08/29/java-ssm-1-4/","text":"","tags":[{"name":"Java","slug":"Java","permalink":"http://www.wistbean.com/tags/Java/"},{"name":"Java视频教程","slug":"Java视频教程","permalink":"http://www.wistbean.com/tags/Java视频教程/"},{"name":"项目实战","slug":"项目实战","permalink":"http://www.wistbean.com/tags/项目实战/"},{"name":"分布式","slug":"分布式","permalink":"http://www.wistbean.com/tags/分布式/"},{"name":"教程","slug":"教程","permalink":"http://www.wistbean.com/tags/教程/"},{"name":"SSM","slug":"SSM","permalink":"http://www.wistbean.com/tags/SSM/"},{"name":"Git","slug":"Git","permalink":"http://www.wistbean.com/tags/Git/"},{"name":"GitHub","slug":"GitHub","permalink":"http://www.wistbean.com/tags/GitHub/"}]},{"title":"「1-3」代码托管Git的使用","date":"2018-08-29T09:25:20.000Z","path":"2018/08/29/java-ssm-1-3/","text":"","tags":[{"name":"Java","slug":"Java","permalink":"http://www.wistbean.com/tags/Java/"},{"name":"Java视频教程","slug":"Java视频教程","permalink":"http://www.wistbean.com/tags/Java视频教程/"},{"name":"项目实战","slug":"项目实战","permalink":"http://www.wistbean.com/tags/项目实战/"},{"name":"分布式","slug":"分布式","permalink":"http://www.wistbean.com/tags/分布式/"},{"name":"教程","slug":"教程","permalink":"http://www.wistbean.com/tags/教程/"},{"name":"SSM","slug":"SSM","permalink":"http://www.wistbean.com/tags/SSM/"},{"name":"Git","slug":"Git","permalink":"http://www.wistbean.com/tags/Git/"}]},{"title":"「1-2」传统的集群架构和分布式架构区别","date":"2018-08-29T09:25:19.000Z","path":"2018/08/29/java-ssm-1-2/","text":"","tags":[{"name":"Java","slug":"Java","permalink":"http://www.wistbean.com/tags/Java/"},{"name":"Java视频教程","slug":"Java视频教程","permalink":"http://www.wistbean.com/tags/Java视频教程/"},{"name":"项目实战","slug":"项目实战","permalink":"http://www.wistbean.com/tags/项目实战/"},{"name":"分布式","slug":"分布式","permalink":"http://www.wistbean.com/tags/分布式/"},{"name":"教程","slug":"教程","permalink":"http://www.wistbean.com/tags/教程/"},{"name":"架构","slug":"架构","permalink":"http://www.wistbean.com/tags/架构/"},{"name":"SSM","slug":"SSM","permalink":"http://www.wistbean.com/tags/SSM/"}]},{"title":"「1-1」分布式高并发java web项目实战视频教程介绍","date":"2018-08-29T09:25:18.000Z","path":"2018/08/29/java-ssm-1-1/","text":"","tags":[{"name":"Java","slug":"Java","permalink":"http://www.wistbean.com/tags/Java/"},{"name":"Java视频教程","slug":"Java视频教程","permalink":"http://www.wistbean.com/tags/Java视频教程/"},{"name":"项目实战","slug":"项目实战","permalink":"http://www.wistbean.com/tags/项目实战/"},{"name":"分布式","slug":"分布式","permalink":"http://www.wistbean.com/tags/分布式/"},{"name":"教程","slug":"教程","permalink":"http://www.wistbean.com/tags/教程/"},{"name":"SSM","slug":"SSM","permalink":"http://www.wistbean.com/tags/SSM/"}]},{"title":"快速搭建一个属于自己的IPsec/L2TP VPN","date":"2018-08-29T09:16:04.000Z","path":"2018/08/29/ipsec,l2tp_vpn/","text":"搭建IPsec/L2TP VPN的准备 一台云服务器VPS 远程连接VPS工具 1.我使用的云服务器是搬瓦工官网，因为性价比高，一年也就十几刀，速度快。 如何拿到搬瓦工优惠码之前说过，可以看这里：拿到搬瓦工优惠码 2.远程连接工具我一直用的是 SecureCRT , 当然你也可以使用其它的 SSH 工具。 开始搭建 IPsec/L2TP VPN获取搬瓦工服务器的ip，端口，账号密码有了搬瓦工服务器的IP地址和端口我们就可以连接了： 搭建 IPsec/L2TP VPN 账号是root，密码可以在这里获取： 搭建 IPsec/L2TP VPN 使用 SSH 工具连接到服务器 搭建 IPsec/L2TP VPN 使用 IPsec/L2TP 脚本搭建在这里感谢hwdsl2提供的脚本，我们在连接到服务器后使用如下命令： 安装 wget ： yum install wget 使用脚本： wget https://git.io/vpnsetup-centos -O vpnsetup.sh &amp;&amp; sudo sh vpnsetup.sh 稍等一会安装成功会提供一个 VPN 需要的信息： Server IP: xxx.xx.xx.xx IPsec PSK: xxxx Username: xxxx Password: xxxx 这时候就搭建成功了，快吧？ windowns 7 使用IPsec/L2TP VPN设置VPN连接单击开始菜单，选择控制面板。 进入 网络和Internet 部分。 单击 网络与共享中心。 单击 设置新的连接或网络。 选择 连接到工作区，然后单击 下一步。 单击 使用我的Internet连接 (VPN)。 在 Internet地址 字段中输入你的 VPN 服务器 IP。 在 目标名称 字段中输入任意内容。 选中 现在不连接；仅进行设置以便稍后连接 复选框。 单击 下一步。 在 用户名 字段中输入你的 VPN 用户名。 在 密码 字段中输入你的 VPN 密码。 选中 记住此密码 复选框。 单击 创建，然后单击 关闭 按钮。 返回 网络与共享中心。单击左侧的 更改适配器设置。 右键单击新创建的 VPN 连接，并选择 属性。 单击 选项 选项卡，取消选中 包括Windows登录域 复选框。 单击 安全 选项卡，从 VPN 类型 下拉菜单中选择 &quot;使用 IPsec 的第 2 层隧道协议 (L2TP/IPSec)&quot;。 单击 允许使用这些协议。确保选中 &quot;质询握手身份验证协议 (CHAP)&quot; 复选框。 单击 高级设置 按钮。 单击 使用预共享密钥作身份验证 并在 密钥 字段中输入你的 VPN IPsec PSK。 单击 确定 关闭 高级设置。 单击 确定 保存 VPN 连接的详细信息。 添加注册表新建一个TXT文件，输入以下内容： Windows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\RasMan\\Parameters] &quot;ProhibitIpSec&quot;=dword:00000000 [HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\PolicyAgent] &quot;AssumeUDPEncapsulationContextOnSendRule&quot;=dword:00000002 另存为.reg格式的文件，然后双击。 启动服务将以下服务全部设置为自动启用，要不然会连接不成功： IPsec Policy Agent Routing and Remote Access Remote Access Auto Connection Manager Remote Access Connection Manager Secure Socket Tunneling Protocol Service 重启电脑后连接重启电脑后，点击右下角的网络连接，双击VPN连接，即可成功连接： 搭建 IPsec/L2TP VPN 连接效果 搭建 IPsec/L2TP VPN iPhone/iPad 使用IPsec/L2TP VPN进入设置 -&gt; 通用 -&gt; VPN。 单击 添加VPN配置...。 单击 类型 。选择 L2TP 并返回。 在 描述 字段中输入任意内容。 在 服务器 字段中输入你的 VPN 服务器 IP。 在 帐户 字段中输入你的 VPN 用户名。 在 密码 字段中输入你的 VPN 密码。 在 密钥 字段中输入你的 VPN IPsec PSK。 启用 发送所有流量 选项。 单击右上角的 存储。 启用 VPN 连接。 搭建 IPsec/L2TP VPN 搭建 IPsec/L2TP VPN 其它客户端连接方式请参考：配置 IPsec/L2TP VPN 客户端 参考文章IPsec VPN 服务器一键安装脚本 自己搭建VPN服务器 使用搬瓦工快速搭建自己的VPN","tags":[{"name":"vpn搭建","slug":"vpn搭建","permalink":"http://www.wistbean.com/tags/vpn搭建/"},{"name":"搬瓦工","slug":"搬瓦工","permalink":"http://www.wistbean.com/tags/搬瓦工/"},{"name":"IPsec/L2TP","slug":"IPsec-L2TP","permalink":"http://www.wistbean.com/tags/IPsec-L2TP/"}]},{"title":"使用搬瓦工快速搭建自己的VPN","date":"2018-06-10T09:06:26.000Z","path":"2018/06/10/banwagong-vpn/","text":"1.使用搬瓦工搭建自己的VPN很多人想要使用 VPN ，不过去购买第三方的「VPN账号」除了不稳定外还怕不安全，有些第三方 VPN 会获取用户的数据做一些坏事，还特么限制网速，不能忍！ 所以想要自己买一台服务器，然后搭建一个完全属于自己的 VPN ，稳定快速又安全！ 那么就在这里教大家使用搬瓦工官网（性价比很高的云服务器提供商）来快速的搭建自己的VPN。而且我还会告诉大家怎么花比别人少的钱购买服务器，下文将会提到怎么获取优惠码，一般人很少知道的！ 2.使用搬瓦工搭建VPN前的准备 一台可以上网的电脑。 支付宝或者PayPal账号， 搬瓦工支持支付宝付款。 3.购买搬瓦工VPS云服务器3.1选择搬瓦工VPS服务器点击搬瓦工官网进入搬瓦工官网（待会在这里可以从中拿到优惠码）。进入之后可以看到可以购买的VPS云服务器，个人使用的话购买最便宜的就好了，比如这里有个19.99刀一年就不错: 使用搬瓦工搭建VPN 不过便宜的很抢手，很快就会被人买光，比如这里 no stock 就说明被人买光了： 使用搬瓦工搭建VPN 3.2拿到搬瓦工优惠码ok，我们点击「Order KVM」: 使用搬瓦工搭建VPN 当你进到这个页面的时候呢，别急着点击「Add to Cart」添加到购物车，这里面暗藏着一个优惠码，很多人不知道，使用浏览器查看源代码，chrome浏览器的话按F12，然后搜索「code」，你会发现有一个 「Try this promo code: xxxx 」，这个xxxx就是优惠码，你把他复制下来，待会有用。 使用搬瓦工搭建VPN 页面的 Location 就是选择服务器的地址，到时访问谷歌的时候会显示你当前访问的地址。好了，我们点击「Add to Cart」。 接下来，进入结算页面，我们刚才复制的优惠码就派上用场了，将你刚刚复制的优惠码复制进去然后点击 「Validate Code」，看！是不是优惠了！一般人不知道这种操作: 使用搬瓦工搭建VPN 接着点击「CheckOut」完成付款即可。付款的时候选择 Alipay 就可以使用支付宝付款。 使用搬瓦工搭建VPN 4.快速搭建搬瓦工VPN购买完毕后你就拥有一台你自己的服务器了，接着点击Services下的MyServices，可以看到你的服务器： 使用搬瓦工搭建VPN 我们点击「KiwiVM Control Panel」进入管理界面： 使用搬瓦工搭建VPN 可以看到你服务器的信息: 使用搬瓦工搭建VPN 接着我们点击 「OpenVPN Server」： 使用搬瓦工搭建VPN 接着点击：「Install and configer OpenVPN Server」，搬瓦工会自动帮我们在服务器安装和配置，不需要自己手动敲命令了： 使用搬瓦工搭建VPN 等一会就搭建好VPN了，就问你快不？ 使用搬瓦工搭建VPN 5.使用搬瓦工openVPNPC端使用搬瓦工VPN首先我们下载我们的VPN文件所需的配置文件，点击「Download key Files」下载，然后再下载openVPN的客户端： 使用搬瓦工搭建VPN 接着将配置文件解压到openVPN客户端的config文件夹下： 使用搬瓦工搭建VPN 使用搬瓦工搭建VPN 接着再openvpn目录下的bin目录双击打开openvpn-gui，然后Connect连接，连接完成右下角的openVPN会成为绿色状态，然后就可以访问外网了，速度很快： 使用搬瓦工搭建VPN 使用搬瓦工搭建VPN 使用搬瓦工搭建VPN iPhone端使用搬瓦工VPN同样，手机也需要安装一个openVPN的客户端，不过你在中国区的 AppleStore 下载不到 openVPN 的，你需要注册一个美区的苹果账号，然后搜索 openVPN 下载： 使用搬瓦工搭建VPN 接着电脑端下载 iTunes ，打开 iTunes ，手机用数据线连接电脑，点击文件共享： 使用搬瓦工搭建VPN 将刚刚下载的vpn文件解压，然后添加到OpenVPN客户端： 使用搬瓦工搭建VPN 手机打开OpenVPN APP， 点击 + 这个按钮： 使用搬瓦工搭建VPN 然后就可以连接了： 使用搬瓦工搭建VPN 访问速度杠杠的： 使用搬瓦工搭建VPN 使用搬瓦工搭建VPN Android端使用搬瓦工VPNAndroid手机使用搬瓦工openVpn同上，下载openVpn App ，然后把配置文件传上去就行了。 相关文章利用搬瓦工VPS自建高速丝滑VPN 在搬瓦工中搭建个人vpn","tags":[{"name":"vpn搭建","slug":"vpn搭建","permalink":"http://www.wistbean.com/tags/vpn搭建/"},{"name":"搬瓦工","slug":"搬瓦工","permalink":"http://www.wistbean.com/tags/搬瓦工/"}]},{"title":"Linux 学习启动篇","date":"2017-03-31T09:25:18.000Z","path":"2017/03/31/satrt-learning-linux/","text":"从这篇文章起，就意味着开始着手学习使用Linux系统了，虽然经常听到Linux操作系统，但是或许正在着手去操作使用的人还是少数的，甚至连什么是Linux都不知道的人也大有所在。那么这篇 「Linux学习启动篇」 将从0开始，首先了解Linux是干嘛的？能在Linux上做些什么事情？接下来再和我一起深入学习！ 1.什么是LinuxLinux是一种自由和开放源代码的类UNIX操作系统。 Linux是自由开放源代码的，这个系统的内核是由「Linus Torvalds（中文名：林纳斯·托瓦兹）」在1991年10月5日发布的，其实Linux本来指的是Linux内核本身，但是通常都用了「Linux内核」来称呼，而Linux就代表了 Linux内核 + 用户空间的应用程序 构成的完整操作系统。 2.开源协议Linux如此受欢迎的其中一个原因就是它开源，这意味着任何个人或者机构都可以很自由的使用Linux里面所有的源代码，你可以对它进行修改生成新的版本然后再发布出来成为你的东西。但是前提是遵循「GUN GPL协议」。 GUN GPL(GUN General Public License)，通用公共许可协议，这是由理查德·斯托曼发起的，许多自由软件和开放源码都采用了这个协议条款，任何个人或者机构使用基于GPL进行衍生发布时必须采用GPL协议许可，而且需要公开源代码。 3.Linux使用领域「服务器领域」： Linux已经在服务器领域占了大半壁江山，随着开源软件的日益强大，Linux服务器操作系统已经越来越多人使用。应该很少人会用windows server了吧。 Linux发行版一直被用来作为服务器的操作系统，并且已经在该领域中占据重要地位。根据2006年9月Netcraft的报告显示，十个最大型的网络托管公司有八个公司在其Web服务器运行Linux发行版。Linux发行版是构成LAMP（Linux操作系统，Apache，MySQL，Perl / PHP / Python）的重要部分，LAMP是一个常见的网站托管平台，在开发者中已经得到普及。 「移动设备嵌入领域」： Linux的低成本、强大的定制功能以及良好的移植性能，在智能手机、平板电脑等移动设备方面，Android手机就是Google开发的基于Linux平台的开源手机操作系统。现在市场上Android手机仍然是占了最大的移动操作系统份额。阿里云的YunOS系统也是基于Linux的，越来越多的系统都使用了Linux。 「桌面领域」： 现在大多数在Windows平台上广泛使用的自由软件都有相应的Linux版本，现在Linux桌面系统的发展也是越来越多了，像国内的红旗Linux，深度Linux，还有你可能经常听到的Ubuntu系统，都是基于Linux的桌面操作系统。 目前能在Windows或Mac OS上运行的应用软件大部分都没有Linux的版本，不过在Linux平台上通常可以找到类似功能的应用软件。大多数在Windows平台上广泛使用的自由软件都有相应的Linux版本，例如Mozilla Firefox、Apache OpenOffice、Pidgin、VLC、GIMP；部分流行的专有软件也有相应的Linux版本，如Adobe Flash Player、Adobe Reader、Google Earth、Nero Burning ROM、Opera、Maple、MATLAB、Skype、Maya、SPSS、Google Chrome。 4.Linux发行版Linux的发行版实在太多了，这里列举几个常见的发行版本。 Debian GNU/Linux 7.0： debian Gentoo Linux 12.0： Gentoo Linux Mint 14： Linux Mint 14 Fedora： Fedora Ubuntu： Ubuntu 以上列举的这几个都是有桌面版的，但是我们学习Linux主要还是对命令行进行学习，对于学习和使用的系统我们选择不是以上这几个，而是centOS系统，那么为什么选择centOS？ 5.选择centOS版本进行学习早前 Red Hat公司 就发行了「Red Hat Linux」的个人版本，到了Red Hat 9.0版本后，Red Hat公司就不再发行桌面版的发行套件了，Red Hat Linux 也就停止了开发，而开始全力集中转向服务器版本上，也就是Red Hat Enterprise Linux（企业版本）。 后来 Red Hat Linux 的桌面版本与来自开源社区的Fedora进行合并，Red Hat Linux 桌面版就称为了 Fedroa Core。 所以目前Red Hat有：免费的Fedroa Core版本，也有收费的Red Hat Enterprise Linux版本。Red Hat Enterprise Linux都会在Fedroa Core版本的基础上进行升级，大约发布6个Fedroa Core版本就会发布一个Red Hat Enterprise Linux版本。 因为之前我们讲过了，Red Hat的企业版本虽然收费的，但是它依照开原协议必须公开源代码，那么这个是时候CentOS就出现了，它的全名是（Community Enterprise Operating Systeam 社区企业操作系统），centOS和Red Hat企业版本的不同之处在于centOS没有包含封闭源码的软件，所以centOS可以自由使用，而且可以长期的享受它的免费升级和服务。 所以选择centOS版本进行学习是很有必要的：目前网络上80%的Linux资源都是基于centOS的发行版的，可以供我们更多的资源查找和学习帮助。centOS版本在许多开源镜像网站可以轻松获取。centOS也具有经典性和代表性，绝大多数物联网公司的后台服务器都使用的是centOS发行版本。 所以综上：选择centOS版本是比较好的。接下来就和我一起学习Linux吧，就从安装虚拟机开始，如何？","tags":[{"name":"教程","slug":"教程","permalink":"http://www.wistbean.com/tags/教程/"},{"name":"Linux","slug":"Linux","permalink":"http://www.wistbean.com/tags/Linux/"}]}]